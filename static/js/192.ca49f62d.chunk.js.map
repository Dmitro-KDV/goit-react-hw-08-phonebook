{"version":3,"file":"static/js/192.ca49f62d.chunk.js","mappings":"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","sources":["components/Phonebook/Phonebook.stiled.jsx","components/redux/tasks/selector.js","components/Phonebook/FormaPhonebook.jsx","components/Phonebook/Contacts.jsx","components/Phonebook/Filter.jsx","components/Page/Tasks.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.div`\n   width: 400px;\n   border: 3px solid #070404;\n   padding: 8px;\n   border-radius: 5px;\n`;\n\nexport const Label = styled.label`\n   display: flex;\n  flex-direction: column;\n  margin-bottom: 8px;\n  width: 150px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\n  margin-top: 10px;\n  width: 390px;\n`;\n\nexport const ContactList = styled.li`\n   display: flex;\n   justify-content: space-between;\n   width: 350px;\n   font-weight: 500;\n   border-bottom: 1px solid #0c1113;\n   color: white;\n`;\n\nexport const ContactItem = styled.ul`\n   margin: 8px 0;\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const Rotating = styled.div`\n   position: fixed;\n   top: 0;\n   left: 0;\n   width: 100vw;\n   height: 100vh;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   z-index: 1200;\n`;\n\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const contactsSelector = state => state.contacts.contacts.items;\nexport const getFilter = state => state.filters.filter;\n\n\nexport const filterSelector = createSelector(\n    [contactsSelector, getFilter],\n    (contacts, filter) => {\n        return contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()))\n    }\n)\n","import TextField from '@mui/material/TextField';\nimport {Form} from './Phonebook.stiled';\nimport { addContact } from 'components/redux/tasks/operation';\nimport { contactsSelector } from 'components/redux/tasks/selector';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport { Button } from '@mui/material';\n\nexport const FormaPhonebook = () => {\n\n    const contacts = useSelector(contactsSelector);\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        const form = evt.target;\n        const {name, number} = evt.target.elements;\n        if (!name.value.trim() || !number.value.trim()) \n            return form.reset();\n        \n        const isAlredyContacts = contacts.find(el => el.name === name.value);\n        if (isAlredyContacts) return alert(`${name.value} is alredy in contacts.`);\n    \n        const newContacts = {\n            name: name.value,   \n            number: number.value,\n        }\n        dispatch(addContact(newContacts));\n\n        form.reset();\n    };\n      \n        return ( \n            <div>\n                {/* <Form onSubmit={handleSubmit}> */}\n                    {/* <Label> */}\n                    <Form>\n                    <Box\n                        component=\"form\"\n                        sx={{\n                            '& > :not(style)': { m: 1, width: '45ch', color: 'white', },\n                        }}\n                        noValidate\n                        autoComplete=\"off\"\n                        onSubmit={handleSubmit}\n                        >\n                        <TextField \n                            id=\"outlined-basic\" \n                            label=\"Name\" \n                            variant=\"outlined\" \n                            type=\"text\"\n                            name=\"name\"\n                        />\n                        <TextField \n                            id=\"outlined-basic\" \n                            label=\"Number\" \n                            variant=\"outlined\" \n                            type=\"tel\"\n                            name=\"number\"\n                        />\n                        <Button variant=\"contained\" type=\"submit\">Add contact</Button>\n                    </Box>\n                        {/* Name\n                        <Input\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                            required\n                        /> */}\n                    {/* </Label> */}\n                    {/* <Label>\n                        Number\n                        <Input\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                            required\n                        />\n                    </Label> */}\n                    {/* <button type=\"submit\">Add contact</button> */}\n                </Form>\n            </div>\n        );\n    }","import { useDispatch, useSelector } from 'react-redux';\nimport {ContactList, ContactItem} from './Phonebook.stiled';\nimport { deleteContact } from 'components/redux/tasks/operation';\nimport { filterSelector } from 'components/redux/tasks/selector';\n\nexport const Contacts = () => {\n    const filterContacts = useSelector(filterSelector);\n\n    const dispatch = useDispatch();\n\n    const handDelete = id => {\n        dispatch(deleteContact(id));\n      };\n    \n    return ( \n        <>\n            {filterContacts.map((el) => \n            <ContactItem key = {el.id}>\n                <ContactList>{el.name}: {el.number}   \n                    <button type='button' onClick={()=>handDelete(el.id)}>Delete</button>\n                </ContactList>\n            </ContactItem>\n            )}\n        </>    \n    );\n}","import { setFilter } from \"components/redux/tasks/slice\";\nimport { getFilter } from \"components/redux/tasks/selector\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const Filter = () => {\n    const filter = useSelector(getFilter)\n    const dispatch = useDispatch();\n\n    const handleChange = ({ target: {value} }) => {\n        dispatch(setFilter(value));\n    };\n    \n    return ( \n        <>\n        <h4>Find contacts by name</h4>\n        <input\n            type=\"text\"\n            name=\"filter\"\n            onChange={handleChange}\n            value={filter}\n        />\n        </>\n    );\n}","import { FormaPhonebook } from 'components/Phonebook/FormaPhonebook';\nimport { Contacts } from 'components/Phonebook/Contacts';\nimport { Filter } from 'components/Phonebook/Filter';\nimport { Container, Rotating } from '../Phonebook/Phonebook.stiled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/tasks/operation';\nimport { useEffect } from 'react';\nimport { RotatingLines } from  'react-loader-spinner'\n// import { selectToken } from 'components/redux/auth/selector';\n\n\nconst UserMenu = () => {\n  const dispatch = useDispatch();\n  const { contacts} = useSelector(state => state.contacts);\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n  return (\n    <Container>\n      <div>\n      <h2>Phonebook</h2>\n      <FormaPhonebook />\n      <h2>Contacts</h2>\n      <Filter />\n      {contacts.isLoading && !contacts.error && \n        <Rotating className=\"RotatingLines\">\n          <RotatingLines\n            strokeColor=\"green\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        </Rotating>\n      }\n      <Contacts />\n      </div>\n    </Container>\n  );\n};\n\nexport default UserMenu\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","ContactList","_templateObject2","_templateObject3","_templateObject4","ContactItem","_templateObject5","Container","_templateObject6","Rotating","_templateObject7","contactsSelector","state","contacts","items","getFilter","filters","filter","filterSelector","createSelector","_ref","name","toLowerCase","includes","FormaPhonebook","useSelector","dispatch","useDispatch","_jsx","children","_jsxs","Box","component","sx","m","width","color","noValidate","autoComplete","onSubmit","evt","preventDefault","form","target","_evt$target$elements","elements","number","value","trim","reset","find","el","alert","concat","newContacts","addContact","TextField","id","label","variant","type","Button","Contacts","filterContacts","_Fragment","map","onClick","deleteContact","Filter","onChange","setFilter","useEffect","fetchContacts","isLoading","error","className","RotatingLines","strokeColor","strokeWidth","animationDuration","visible"],"sourceRoot":""}