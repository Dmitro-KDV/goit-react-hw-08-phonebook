{"version":3,"file":"static/js/211.cc9f7b20.chunk.js","mappings":"+KAmEE,UAhEmB,WACjB,IAAMA,GAAWC,EAAAA,EAAAA,MAqBjB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,QAAMC,SArBW,SAAAC,GACnBA,EAAIC,iBACJ,IAAAC,EAAkCF,EAAIG,OAAOC,SAArCC,EAAIH,EAAJG,KAAMC,EAAKJ,EAALI,MAAOC,EAAQL,EAARK,SACfC,EAAU,CACdH,KAAMA,EAAKI,MACXH,MAAOA,EAAMG,MACbF,SAAUA,EAASE,QAMrBC,EAAAA,EAAAA,IAAOF,GACJG,MAAK,WACJjB,EAAS,SACX,IACCkB,OAAM,SAACC,GAAK,OAAKC,QAAQC,IAAIF,EAAMG,QAAQ,GAChD,EAIiCnB,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,SAEHD,EAAAA,EAAAA,KAAA,SACEqB,KAAK,OACLZ,KAAK,OAILa,GAAG,yBAGPpB,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,UAELD,EAAAA,EAAAA,KAAA,SACEqB,KAAK,QACLZ,KAAK,QAILa,GAAG,0BAGPpB,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,YAELD,EAAAA,EAAAA,KAAA,SACEqB,KAAK,OACLZ,KAAK,WAILa,GAAG,6BAGPtB,EAAAA,EAAAA,KAAA,UAAQqB,KAAK,SAAQpB,SAAC,qBAI9B,C","sources":["components/Page/RegisterPage.jsx"],"sourcesContent":["import { singUp } from \"components/services\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst RegisterPage = () => {\n    const navigate = useNavigate()\n\n    const handleSubmit = evt => {\n      evt.preventDefault();\n      const { name, email, password } = evt.target.elements;\n      const newUser = {\n        name: name.value,\n        email: email.value,\n        password: password.value,\n      }\n      // dispatch(\n      //   loginThunk(newUser)\n      //   // Notiflix.Notify.failure('Sorry, there are no images matching your search query. Please try again.');\n      // );\n      singUp(newUser)\n        .then(() => {\n          navigate('/login')\n        })\n        .catch((error) => console.log(error.message))\n    };\n  \n    return (\n      <div>\n        <form onSubmit={handleSubmit}>\n        <label>\n            Login\n            <input\n              type=\"text\"\n              name=\"name\"\n              // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              // required\n              id='exampleInputName'\n            />\n          </label>\n          <label>\n            E-mail\n            <input\n              type=\"email\"\n              name=\"email\"\n              // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              // required\n              id='exampleInputEmail'\n            />\n          </label>\n          <label>\n            Password\n            <input\n              type=\"text\"\n              name=\"password\"\n              // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              // required\n              id='exampleInputPassword'\n            />\n          </label>\n          <button type=\"submit\">Registration</button>\n        </form>\n      </div>\n    );\n  };\n  \n  export default RegisterPage"],"names":["navigate","useNavigate","_jsx","children","_jsxs","onSubmit","evt","preventDefault","_evt$target$elements","target","elements","name","email","password","newUser","value","singUp","then","catch","error","console","log","message","type","id"],"sourceRoot":""}