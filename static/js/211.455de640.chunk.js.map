{"version":3,"file":"static/js/211.455de640.chunk.js","mappings":"gOAwEE,UAhEmB,WAEjB,IAAMA,GAAWC,EAAAA,EAAAA,MA4BjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAAAC,UACRC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,SA5BW,SAAAC,GACnBA,EAAIC,iBACJ,IAAAC,EAAkCF,EAAIG,OAAOC,SAArCC,EAAIH,EAAJG,KAAMC,EAAKJ,EAALI,MAAOC,EAAQL,EAARK,SACfC,EAAU,CACdH,KAAMA,EAAKI,MACXH,MAAOA,EAAMG,MACbF,SAAUA,EAASE,QAErBC,EAAAA,EAAAA,IAAOF,GACJG,MAAK,WAEJnB,GAASoB,EAAAA,EAAAA,IAAW,CAClBN,MAAOA,EAAMG,MACbF,SAAUA,EAASE,SAErBI,IAAAA,OAAAA,QAAwB,wBAC1B,IACCC,OAAM,SAACC,GACJA,EAAMC,SAASC,KAAKC,SACtBL,IAAAA,OAAAA,QAAwB,oCAChBE,EAAMC,SAASC,KAAKE,QAC5BN,IAAAA,OAAAA,QAAwB,qDAE1B,GACJ,EAIiCjB,SAAA,EAC7BC,EAAAA,EAAAA,MAACuB,EAAAA,GAAS,CAAAxB,SAAA,CAAC,QAEPF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAS,CACRC,KAAK,OACLjB,KAAK,OACLkB,GAAG,yBAGP1B,EAAAA,EAAAA,MAACuB,EAAAA,GAAS,CAAAxB,SAAA,CAAC,UAETF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAS,CACRC,KAAK,QACLjB,KAAK,QACLkB,GAAG,0BAGP1B,EAAAA,EAAAA,MAACuB,EAAAA,GAAS,CAAAxB,SAAA,CAAC,YAETF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAS,CACRC,KAAK,OACLjB,KAAK,WACLkB,GAAG,6BAGP7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACC,QAAQ,YAAYH,KAAK,SAAQ1B,SAAC,qBAKlD,C","sources":["components/Page/RegisterPage.jsx"],"sourcesContent":["import { loginThunk } from \"components/redux/auth/operation\";\nimport { singUp } from \"components/services\";\nimport { Form, FormInput, FormLabel, LoginForm } from \"components/stiled\";\nimport { useDispatch } from \"react-redux\";\n// import { useNavigate } from \"react-router-dom\";\nimport Notiflix from 'notiflix';\nimport { Button } from \"@mui/material\";\n\nconst RegisterPage = () => {\n    // const navigate = useNavigate()\n    const dispatch = useDispatch();\n\n    const handleSubmit = evt => {\n      evt.preventDefault();\n      const { name, email, password } = evt.target.elements;\n      const newUser = {\n        name: name.value,\n        email: email.value,\n        password: password.value,\n      }\n      singUp(newUser)\n        .then(() => {\n          // navigate('/login')\n          dispatch(loginThunk({\n            email: email.value,\n            password: password.value,\n          }))\n          Notiflix.Notify.success('Welcome Contacts book')\n        })\n        .catch((error) => {\n        if (error.response.data.keyValue) {\n          Notiflix.Notify.failure('This email is already registered')\n        } else if(error.response.data.errors) {\n          Notiflix.Notify.failure('Invalid password (more than 7 characters required)')\n        }\n        })\n    };\n  \n    return (\n      <LoginForm>\n        <Form onSubmit={handleSubmit}>\n        <FormLabel>\n            Name\n            <FormInput\n              type=\"text\"\n              name=\"name\"\n              id='exampleInputName'\n            />\n          </FormLabel>\n          <FormLabel>\n            E-mail\n            <FormInput\n              type=\"email\"\n              name=\"email\"\n              id='exampleInputEmail'\n            />\n          </FormLabel>\n          <FormLabel>\n            Password\n            <FormInput\n              type=\"text\"\n              name=\"password\"\n              id='exampleInputPassword'\n            />\n          </FormLabel>\n          <Button variant=\"contained\" type=\"submit\">Registration</Button>\n          {/* <FormButton type=\"submit\">Registration</FormButton> */}\n        </Form>\n      </LoginForm>\n    );\n  };\n  \n  export default RegisterPage"],"names":["dispatch","useDispatch","_jsx","LoginForm","children","_jsxs","Form","onSubmit","evt","preventDefault","_evt$target$elements","target","elements","name","email","password","newUser","value","singUp","then","loginThunk","Notiflix","catch","error","response","data","keyValue","errors","FormLabel","FormInput","type","id","Button","variant"],"sourceRoot":""}